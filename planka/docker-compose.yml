services:
  planka:
    image: ghcr.io/plankanban/planka:2.0.0-rc.3
    #command: npm run db:upgrade
    container_name: planka
    restart: unless-stopped
    environment:
      - BASE_URL=${URL}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASS}@$planka-db/${DB_NAME}
      - PGID=${GID}
      - PUID=${UID}
      - SECRET_KEY=${SECRET_KEY}
      - DEFAULT_LANGUAGE=en-US
    ports:
      - ${PORT}:1337
    volumes:
      - ${MNT}/attachments:/app/private/attachments
      - ${MNT}/background-images:/app/public/background-images
      - ${MNT}/user-avatars:/app/public/user-avatars
      - ${MNT}/favicons:/app/public/favicons
    networks:
      - planka_network
    depends_on:
      planka-db:
        condition: service_healthy
  postgres:
    container_name: planka-db
    image: postgres:16-alpine
    restart: on-failure
    volumes:
      - ${MNT}/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d planka"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - planka_network

networks:
  planka_network:
    external: false
